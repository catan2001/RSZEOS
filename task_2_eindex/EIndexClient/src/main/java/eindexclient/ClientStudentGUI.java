/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eindexclient;

import java.io.PrintWriter;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author catic
 */
public class ClientStudentGUI extends javax.swing.JFrame implements ServerHandler {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ClientStudentGUI.class.getName());
    private final EIndexClient app;
    private final PrintWriter writer;
    private final String username;

    /**
     * Creates new form ClientStudentGUI
     *
     * @param app
     * @param writer
     * @param username
     */
    public ClientStudentGUI(EIndexClient app, PrintWriter writer, String username) {
        this.app = app;
        this.writer = writer;
        this.username = username;
        initComponents();

        System.out.println("username: " + username);
        writer.println("GET_STUDENT_DETAILS:" + username);
    }

    @Override
    public void handleServerMessage(String message) {
        System.out.println(message);
        java.awt.EventQueue.invokeLater(() -> {
            if (message.startsWith("ASSIGNED_COURSES:")) {
                String[] parts = message.split(":", 2);  // split only into 2 parts
                DefaultListModel<String> model = new DefaultListModel<>();

                if (parts.length > 1) {
                    String[] courses = parts[1].split(";"); // now split by semicolon
                    for (String course : courses) {
                        model.addElement(course);
                    }
                }
                listAssignedCourses.setModel(model);
            } else if (message.startsWith("COURSE_SCORES:")) {
                String courseInfo = message.split(":")[1]; // get part after "COURSE_SCORES:"
                String[] categoryScores = courseInfo.split("\\|"); // split into category;score;min?max

                // Create a table model with four columns: Category, Score, Min, Max
                DefaultTableModel tableModel = new DefaultTableModel(
                        new Object[]{"Category", "Score", "Min", "Max"}, 0);

                int total = 0;
                for (String cs : categoryScores) {
                    String[] parts = cs.split(";");
                    if (parts.length == 3) {
                        String category = parts[0].trim();
                        int score = Integer.parseInt(parts[1].trim());

                        // Split min and max (e.g., "10?20")
                        String[] minMax = parts[2].split("\\?");
                        int min = Integer.parseInt(minMax[0].trim());
                        int max = Integer.parseInt(minMax[1].trim());

                        total += score;
                        tableModel.addRow(new Object[]{category, score, min, max});
                    }
                }

                tableCourseScore.setModel(tableModel);
                textAreaScore.setText(String.valueOf(total));
                textAreaGrade.setText(String.valueOf(calcGrade(total)));
            }
        });
    }

    private int calcGrade(int score) {
        if (score <= 50) {
            return 5;
        }
        if (score <= 60) {
            return 6;
        }
        if (score <= 70) {
            return 7;
        }
        if (score <= 80) {
            return 8;
        }
        if (score <= 90) {
            return 9;
        }
        return 10;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        textAreaScore = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        tableCourseScore = new javax.swing.JTable();
        buttonReadCourses = new javax.swing.JButton();
        labelStudentPanel = new javax.swing.JLabel();
        labelCurrentGradeOfAllCourses = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaInfoPanel = new javax.swing.JTextArea();
        labelCourseScore = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listAssignedCourses = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        textAreaGrade = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane5.setHorizontalScrollBar(null);
        jScrollPane5.setInheritsPopupMenu(true);

        textAreaScore.setEditable(false);
        textAreaScore.setColumns(20);
        textAreaScore.setRows(1);
        textAreaScore.setAutoscrolls(false);
        jScrollPane5.setViewportView(textAreaScore);

        tableCourseScore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane9.setViewportView(tableCourseScore);

        buttonReadCourses.setText("ReadCourses");
        buttonReadCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReadCoursesActionPerformed(evt);
            }
        });

        labelStudentPanel.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        labelStudentPanel.setText("Student Panel");

        labelCurrentGradeOfAllCourses.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        labelCurrentGradeOfAllCourses.setText("Courses");

        textAreaInfoPanel.setEditable(false);
        textAreaInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        textAreaInfoPanel.setColumns(20);
        textAreaInfoPanel.setLineWrap(true);
        textAreaInfoPanel.setRows(5);
        textAreaInfoPanel.setText("Welcome, Student!\nHow to use this page:\n    1. Click Read Courses to load or refresh the list of courses assigned to you.\n    2. Select a course from the list to view your scores");
        jScrollPane1.setViewportView(textAreaInfoPanel);

        labelCourseScore.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        labelCourseScore.setText("Course Score");

        listAssignedCourses.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listAssignedCourses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listAssignedCoursesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listAssignedCourses);

        jLabel1.setText("Score");

        jLabel2.setText("Grade");

        jScrollPane6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane6.setHorizontalScrollBar(null);
        jScrollPane6.setInheritsPopupMenu(true);

        textAreaGrade.setEditable(false);
        textAreaGrade.setColumns(20);
        textAreaGrade.setRows(1);
        textAreaGrade.setAutoscrolls(false);
        jScrollPane6.setViewportView(textAreaGrade);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelStudentPanel)
                                .addComponent(labelCurrentGradeOfAllCourses)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonReadCourses)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(labelCourseScore)))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelStudentPanel)
                .addGap(18, 18, 18)
                .addComponent(labelCurrentGradeOfAllCourses)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonReadCourses)
                        .addGap(27, 27, 27))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(labelCourseScore)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonReadCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReadCoursesActionPerformed
        System.out.println("selectedStudentUsername: " + username);
        writer.println("GET_STUDENT_DETAILS:" + username);
    }//GEN-LAST:event_buttonReadCoursesActionPerformed

    private void listAssignedCoursesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAssignedCoursesMouseClicked
        String courseName = listAssignedCourses.getSelectedValue();

        if (courseName != null && username != null) {
            writer.println("GET_COURSE_SCORES:" + courseName);
        }
    }//GEN-LAST:event_listAssignedCoursesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonReadCourses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel labelCourseScore;
    private javax.swing.JLabel labelCurrentGradeOfAllCourses;
    private javax.swing.JLabel labelStudentPanel;
    private javax.swing.JList<String> listAssignedCourses;
    private javax.swing.JTable tableCourseScore;
    private javax.swing.JTextArea textAreaGrade;
    private javax.swing.JTextArea textAreaInfoPanel;
    private javax.swing.JTextArea textAreaScore;
    // End of variables declaration//GEN-END:variables
}
